name: Generate Tasks from PRDs

on:
  push:
    paths:
      - 'docs/**.prd.md'
  pull_request:
    paths:
      - 'docs/**.prd.md'
  workflow_dispatch:
    inputs:
      complexity-threshold:
        description: 'Maximum complexity threshold for tasks'
        required: false
        default: '40'
        type: string
      max-depth:
        description: 'Maximum depth for task hierarchy'
        required: false
        default: '3'
        type: string
      prd-path-glob:
        description: 'Glob pattern for PRD files'
        required: false
        default: 'docs/**.prd.md'
        type: string
      force-regenerate:
        description: 'Force regenerate all tasks (ignore existing issues)'
        required: false
        default: false
        type: boolean
      dry-run:
        description: 'Enable dry-run mode (preview only, no issues created)'
        required: false
        default: false
        type: boolean
  schedule:
    # Run daily at 6 AM UTC to check for any missed PRD updates
    - cron: '0 6 * * *'

jobs:
  generate-tasks:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci

      - name: Check for PRD files
        id: check-prds
        run: |
          # Check if any PRD files exist
          PRD_PATTERN="${{ github.event.inputs.prd-path-glob || 'docs/**.prd.md' }}"
          
          # Detect dry-run mode for pull requests
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "Pull request detected - enabling dry-run mode"
            echo "is-dry-run=true" >> $GITHUB_OUTPUT
            echo "should-run=true" >> $GITHUB_OUTPUT
          elif [ "${{ github.event.inputs.dry-run }}" = "true" ]; then
            echo "Manual dry-run mode enabled"
            echo "is-dry-run=true" >> $GITHUB_OUTPUT
            echo "should-run=true" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "schedule" ]; then
            echo "Scheduled run - processing all PRD files matching pattern: $PRD_PATTERN"
            echo "is-dry-run=false" >> $GITHUB_OUTPUT
            echo "should-run=true" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "Manual dispatch - processing all PRD files matching pattern: $PRD_PATTERN"
            echo "is-dry-run=false" >> $GITHUB_OUTPUT
            echo "should-run=true" >> $GITHUB_OUTPUT
          else
            # For push events, check if any PRD files changed
            PRD_FILES=$(find . -name "*.prd.md" -path "./docs/*" | head -5)
            if [ -n "$PRD_FILES" ]; then
              echo "Found PRD files to process:"
              echo "$PRD_FILES"
              echo "is-dry-run=false" >> $GITHUB_OUTPUT
              echo "should-run=true" >> $GITHUB_OUTPUT
            else
              echo "No PRD files found matching pattern: $PRD_PATTERN"
              echo "is-dry-run=false" >> $GITHUB_OUTPUT
              echo "should-run=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Build TypeScript
        if: steps.check-prds.outputs.should-run == 'true'
        run: |
          npm run build

      - name: Generate task graph
        id: generate-graph
        if: steps.check-prds.outputs.should-run == 'true'
        env:
          INPUT_COMPLEXITY_THRESHOLD: ${{ github.event.inputs.complexity-threshold || '40' }}
          INPUT_MAX_DEPTH: ${{ github.event.inputs.max-depth || '3' }}
          INPUT_PRD_PATH_GLOB: ${{ github.event.inputs.prd-path-glob || 'docs/**.prd.md' }}
          INPUT_BREAKDOWN_MAX_DEPTH: '2'
          INPUT_TASKMASTER_ARGS: '--verbose'
        run: |
          node src/main.js

      - name: Validate task graph
        if: steps.check-prds.outputs.should-run == 'true' && success()
        run: |
          echo "Validating generated task graph..."
          
          # Check if task graph file exists
          if [ ! -f .taskmaster/tasks/tasks.json ]; then
            echo "Error: Task graph file not found"
            exit 1
          fi
          
          # Validate JSON structure
          if ! jq empty .taskmaster/tasks/tasks.json; then
            echo "Error: Invalid JSON in task graph"
            exit 1
          fi
          
          # Check if tasks array exists and is not empty
          TASK_COUNT=$(jq '.master.tasks | length' .taskmaster/tasks/tasks.json)
          if [ "$TASK_COUNT" -eq 0 ]; then
            echo "Warning: No tasks found in task graph"
            echo "task-count=0" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          echo "Task graph validation successful: $TASK_COUNT tasks found"
          echo "task-count=$TASK_COUNT" >> $GITHUB_OUTPUT

      - name: Create GitHub Issues
        if: steps.check-prds.outputs.should-run == 'true' && steps.check-prds.outputs.is-dry-run == 'false' && success()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_OWNER: ${{ github.repository_owner }}
          GITHUB_REPO: ${{ github.event.repository.name }}
          FORCE_REGENERATE: ${{ github.event.inputs.force-regenerate || 'false' }}
        run: |
          # Check if we have tasks to process
          TASK_COUNT=$(jq '.master.tasks | length' .taskmaster/tasks/tasks.json 2>/dev/null || echo "0")
          
          if [ "$TASK_COUNT" -eq 0 ]; then
            echo "No tasks to process, skipping issue creation"
            exit 0
          fi
          
          echo "Creating GitHub issues for $TASK_COUNT tasks..."
          node create-issues.js

      - name: Post Preview Comment
        if: steps.check-prds.outputs.should-run == 'true' && steps.check-prds.outputs.is-dry-run == 'true' && success() && github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_OWNER: ${{ github.repository_owner }}
          GITHUB_REPO: ${{ github.event.repository.name }}
          PR_NUMBER: ${{ github.event.number }}
        run: |
          # Check if we have tasks to process
          TASK_COUNT=$(jq '.master.tasks | length' .taskmaster/tasks/tasks.json 2>/dev/null || echo "0")
          
          if [ "$TASK_COUNT" -eq 0 ]; then
            echo "No tasks to process, skipping preview comment"
            exit 0
          fi
          
          echo "Posting preview comment for $TASK_COUNT tasks..."
          node post-preview-comment.js

      - name: Show Dry-Run Results
        if: steps.check-prds.outputs.should-run == 'true' && steps.check-prds.outputs.is-dry-run == 'true' && success() && github.event_name != 'pull_request'
        run: |
          # Check if we have tasks to process
          TASK_COUNT=$(jq '.master.tasks | length' .taskmaster/tasks/tasks.json 2>/dev/null || echo "0")
          
          if [ "$TASK_COUNT" -eq 0 ]; then
            echo "No tasks to process in dry-run mode"
            exit 0
          fi
          
          echo "DRY-RUN MODE: $TASK_COUNT tasks would be created:"
          echo "=============================================="
          jq -r '.master.tasks[] | "- \(.title) (Priority: \(.priority // "medium"), Complexity: \(.complexity // "unknown")/10)"' .taskmaster/tasks/tasks.json
          echo "=============================================="
          echo "No issues were created because dry-run mode is enabled."

      - name: Upload task graph artifact
        if: steps.check-prds.outputs.should-run == 'true' && always()
        uses: actions/upload-artifact@v4
        with:
          name: task-graph-${{ github.run_id }}
          path: .taskmaster/tasks/tasks.json
          retention-days: 30

      - name: Summary
        if: always()
        run: |
          echo "## Task Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Workflow**: ${{ github.workflow }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Dry Run Mode**: ${{ steps.check-prds.outputs.is-dry-run || 'false' }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check-prds.outputs.should-run }}" = "false" ]; then
            echo "- **Status**: Skipped (no PRD files found)" >> $GITHUB_STEP_SUMMARY
          elif [ -f .taskmaster/tasks/tasks.json ]; then
            TASK_COUNT=$(jq '.master.tasks | length' .taskmaster/tasks/tasks.json)
            COMPLEXITY_THRESHOLD=$(jq '.master.metadata.complexityThreshold' .taskmaster/tasks/tasks.json)
            MAX_DEPTH=$(jq '.master.metadata.maxDepth' .taskmaster/tasks/tasks.json)
            PRD_FILES=$(jq '.master.metadata.prdFiles | join(", ")' .taskmaster/tasks/tasks.json)
            
            echo "- **Tasks Generated**: $TASK_COUNT" >> $GITHUB_STEP_SUMMARY
            echo "- **Complexity Threshold**: $COMPLEXITY_THRESHOLD" >> $GITHUB_STEP_SUMMARY
            echo "- **Max Depth**: $MAX_DEPTH" >> $GITHUB_STEP_SUMMARY
            echo "- **PRD Files**: $PRD_FILES" >> $GITHUB_STEP_SUMMARY
            
            if [ "${{ steps.check-prds.outputs.is-dry-run }}" = "true" ]; then
              echo "- **Action**: Preview comment posted to PR #${{ github.event.number }}" >> $GITHUB_STEP_SUMMARY
            else
              echo "- **Action**: GitHub issues created" >> $GITHUB_STEP_SUMMARY
            fi
          else
            echo "- **Tasks Generated**: 0 (no task graph found)" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Configuration" >> $GITHUB_STEP_SUMMARY
          echo "- **Complexity Threshold**: ${{ github.event.inputs.complexity-threshold || '40' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Max Depth**: ${{ github.event.inputs.max-depth || '3' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **PRD Path Glob**: ${{ github.event.inputs.prd-path-glob || 'docs/**.prd.md' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Force Regenerate**: ${{ github.event.inputs.force-regenerate || 'false' }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.check-prds.outputs.should-run }}" = "true" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Artifacts" >> $GITHUB_STEP_SUMMARY
            echo "- [Task Graph](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Changed Files" >> $GITHUB_STEP_SUMMARY
            echo "This run was triggered by changes to PRD files." >> $GITHUB_STEP_SUMMARY
          elif [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Pull Request Preview" >> $GITHUB_STEP_SUMMARY
            echo "This run was triggered by a pull request. A preview comment has been posted to PR #${{ github.event.number }}." >> $GITHUB_STEP_SUMMARY
          fi