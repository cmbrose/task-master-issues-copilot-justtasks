---
name: 'Taskmaster Issues Generator'
description: >
  Automatically generate GitHub Issues from PRD files using Taskmaster CLI
author: 'cmbrose'
branding:
  icon: 'layers'
  color: 'blue'

inputs:
  complexity-threshold:
    description: 'Maximum complexity threshold for tasks (default: 40)'
    required: false
    default: '40'

  max-depth:
    description: 'Maximum depth for task hierarchy (default: 3)'
    required: false
    default: '3'

  prd-path-glob:
    description: >
      Glob pattern for PRD files to process (default: docs/**.prd.md)
    required: false
    default: 'docs/**.prd.md'

  breakdown-max-depth:
    description: 'Maximum depth for task breakdown (default: 2)'
    required: false
    default: '2'

  taskmaster-args:
    description: 'Additional arguments to pass to Taskmaster CLI'
    required: false
    default: ''

<<<<<<< HEAD
  replay-artifact-id:
    description: 'ID of artifact to replay (for recovery workflows)'
    required: false
    default: ''

  cleanup-artifacts:
    description: 'Whether to cleanup expired artifacts'
=======
  dry-run:
    description: 'Enable dry-run mode (preview only, no issues created)'
>>>>>>> origin/main
    required: false
    default: 'false'

outputs:
  task-count:
    description: 'Number of tasks generated'
    value: ${{ steps.generate.outputs.task-count }}

  artifact-url:
    description: 'URL to the generated task graph artifact'
    value: ${{ steps.generate.outputs.artifact-url }}

runs:
  using: 'composite'
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      shell: bash
      run: |
        npm ci

    - name: Build TypeScript
      shell: bash
      run: |
        npm run build

    - name: Generate task graph
      id: generate
      shell: bash
      env:
        INPUT_COMPLEXITY_THRESHOLD: ${{ inputs.complexity-threshold }}
        INPUT_MAX_DEPTH: ${{ inputs.max-depth }}
        INPUT_PRD_PATH_GLOB: ${{ inputs.prd-path-glob }}
        INPUT_BREAKDOWN_MAX_DEPTH: ${{ inputs.breakdown-max-depth }}
        INPUT_TASKMASTER_ARGS: ${{ inputs.taskmaster-args }}
        INPUT_REPLAY_ARTIFACT_ID: ${{ inputs.replay-artifact-id }}
        INPUT_CLEANUP_ARTIFACTS: ${{ inputs.cleanup-artifacts }}
      run: |
        node src/main.js

    - name: Create GitHub Issues
      id: create-issues
      if: ${{ inputs.dry-run != 'true' }}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
        GITHUB_OWNER: ${{ github.repository_owner }}
        GITHUB_REPO: ${{ github.event.repository.name }}
      run: |
        node create-issues.js

    - name: Post Preview Comment (Dry Run)
      id: post-preview
      if: ${{ inputs.dry-run == 'true' && github.event_name == 'pull_request' }}
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}
        GITHUB_OWNER: ${{ github.repository_owner }}
        GITHUB_REPO: ${{ github.event.repository.name }}
        PR_NUMBER: ${{ github.event.number }}
      run: |
        node post-preview-comment.js
